{
  "name": "commit-ai",
  "displayName": "Commit AI",
  "description": "A VS Code extension to automate writing conventional commit messages using AI",
  "publisher": "Nader Elshehabi",
  "keywords": [
    "vscode",
    "extension",
    "commit",
    "ai",
    "chatgpt",
    "conventional",
    "commitlint"
  ],
  "version": "0.0.1",
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/naderelshehabi/commit-ai.git"
  },
  "author": "Nader Elshehabi",
  "license": "MIT",
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Machine Learning"
  ],
  "activationEvents": [
    "onView:sourceControl"
  ],
  "main": "./out/extension.js",
  "icon": "./images/commit-ai-icon.png",
  "contributes": {
    "menus": {
      "scm/title": [
        {
          "command": "commit-ai.helloWorld",
          "group": "navigation",
          "title": "Generate commit message using ChatGPT",
          "when": "scmProvider == git"
        },
        {
          "command": "commit-ai.helloWorld",
          "group": "inline",
          "title": "Generate commit message using ChatGPT",
          "when": "scmProvider == git"
        }
      ]
    },
    "commands": [
      {
        "command": "commit-ai.helloWorld",
        "title": "Hello World",
        "icon": {
          "light": "images/commit-ai-light.png",
          "dark": "images/commit-ai-dark.png"
        }
      }
    ],
    "configuration": {
      "title": "Commit AI",
      "properties": {
        "commit-ai.apiKey": {
          "type": "string",
          "default": "",
          "description": "ChatGPT API key. Get one at https://platform.openai.com/account/api-keys"
        },
        "commit-ai.prompt": {
          "type": "string",
          "default": "You are an AI pair programmer. You are responsible for creating commit messages using the conventional commit format from the git diff results that I will send you. Start the message with the commit type (e.g. feat, fix, chore). Use ! when there are breaking changes. Then use GitMoji after the commit type. Use the present tense. Lines must not be longer than 72 characters. Generate conventional commit message for the following diff:",
          "description": "Prompt to use when generating commit messages using ChatGPT",
          "editpresentation": "multilineText"
        },
        "commit-ai.ignoredFiles": {
          "type": "array",
          "default": [
            "yarn.lock",
            "package-lock.json"
          ],
          "description": "Files to ignore when generating commit messages using ChatGPT"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@commitlint/config-conventional": "^17.6.1",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.56.0",
    "@typescript-eslint/parser": "^5.56.0",
    "@vscode/test-electron": "^2.3.0",
    "commitlint": "^17.6.1",
    "eslint": "^8.36.0",
    "glob": "^8.1.0",
    "husky": "^8.0.3",
    "mocha": "^10.2.0",
    "typescript": "^4.9.5"
  }
}
